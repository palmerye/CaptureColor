{"id":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","dependencies":[{"name":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\css-line-break\\package.json","includedInParent":true,"mtime":1535616500645},{"name":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\demo\\package.json","includedInParent":true,"mtime":1538130602621},{"name":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\demo\\.babelrc","includedInParent":true,"mtime":1537328857517},{"name":"./Trie","loc":{"line":12,"column":20},"parent":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\css-line-break\\dist\\LineBreak.js","resolved":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\css-line-break\\dist\\Trie.js"},{"name":"./linebreak-trie","loc":{"line":14,"column":29},"parent":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\css-line-break\\dist\\LineBreak.js","resolved":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\css-line-break\\dist\\linebreak-trie.js"},{"name":"./Util","loc":{"line":18,"column":20},"parent":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\css-line-break\\dist\\LineBreak.js","resolved":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\css-line-break\\dist\\Util.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LineBreaker = exports.inlineBreakOpportunities = exports.lineBreakAtIndex = exports.codePointsToCharacterClasses = exports.UnicodeTrie = exports.BREAK_ALLOWED = exports.BREAK_NOT_ALLOWED = exports.BREAK_MANDATORY = exports.classes = exports.LETTER_NUMBER_MODIFIER = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _Trie = require('./Trie');\n\nvar _linebreakTrie = require('./linebreak-trie');\n\nvar _linebreakTrie2 = _interopRequireDefault(_linebreakTrie);\n\nvar _Util = require('./Util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LETTER_NUMBER_MODIFIER = exports.LETTER_NUMBER_MODIFIER = 50;\n\n// Non-tailorable Line Breaking Classes\nvar BK = 1; //  Cause a line break (after)\nvar CR = 2; //  Cause a line break (after), except between CR and LF\nvar LF = 3; //  Cause a line break (after)\nvar CM = 4; //  Prohibit a line break between the character and the preceding character\nvar NL = 5; //  Cause a line break (after)\nvar SG = 6; //  Do not occur in well-formed text\nvar WJ = 7; //  Prohibit line breaks before and after\nvar ZW = 8; //  Provide a break opportunity\nvar GL = 9; //  Prohibit line breaks before and after\nvar SP = 10; // Enable indirect line breaks\nvar ZWJ = 11; // Prohibit line breaks within joiner sequences\n// Break Opportunities\nvar B2 = 12; //  Provide a line break opportunity before and after the character\nvar BA = 13; //  Generally provide a line break opportunity after the character\nvar BB = 14; //  Generally provide a line break opportunity before the character\nvar HY = 15; //  Provide a line break opportunity after the character, except in numeric context\nvar CB = 16; //   Provide a line break opportunity contingent on additional information\n// Characters Prohibiting Certain Breaks\nvar CL = 17; //  Prohibit line breaks before\nvar CP = 18; //  Prohibit line breaks before\nvar EX = 19; //  Prohibit line breaks before\nvar IN = 20; //  Allow only indirect line breaks between pairs\nvar NS = 21; //  Allow only indirect line breaks before\nvar OP = 22; //  Prohibit line breaks after\nvar QU = 23; //  Act like they are both opening and closing\n// Numeric Context\nvar IS = 24; //  Prevent breaks after any and before numeric\nvar NU = 25; //  Form numeric expressions for line breaking purposes\nvar PO = 26; //  Do not break following a numeric expression\nvar PR = 27; //  Do not break in front of a numeric expression\nvar SY = 28; //  Prevent a break before; and allow a break after\n// Other Characters\nvar AI = 29; //  Act like AL when the resolvedEAW is N; otherwise; act as ID\nvar AL = 30; //  Are alphabetic characters or symbols that are used with alphabetic characters\nvar CJ = 31; //  Treat as NS or ID for strict or normal breaking.\nvar EB = 32; //  Do not break from following Emoji Modifier\nvar EM = 33; //  Do not break from preceding Emoji Base\nvar H2 = 34; //  Form Korean syllable blocks\nvar H3 = 35; //  Form Korean syllable blocks\nvar HL = 36; //  Do not break around a following hyphen; otherwise act as Alphabetic\nvar ID = 37; //  Break before or after; except in some numeric context\nvar JL = 38; //  Form Korean syllable blocks\nvar JV = 39; //  Form Korean syllable blocks\nvar JT = 40; //  Form Korean syllable blocks\nvar RI = 41; //  Keep pairs together. For pairs; break before and after other classes\nvar SA = 42; //  Provide a line break opportunity contingent on additional, language-specific context analysis\nvar XX = 43; //  Have as yet unknown line breaking behavior or unassigned code positions\n\nvar classes = exports.classes = {\n    BK: BK,\n    CR: CR,\n    LF: LF,\n    CM: CM,\n    NL: NL,\n    SG: SG,\n    WJ: WJ,\n    ZW: ZW,\n    GL: GL,\n    SP: SP,\n    ZWJ: ZWJ,\n    B2: B2,\n    BA: BA,\n    BB: BB,\n    HY: HY,\n    CB: CB,\n    CL: CL,\n    CP: CP,\n    EX: EX,\n    IN: IN,\n    NS: NS,\n    OP: OP,\n    QU: QU,\n    IS: IS,\n    NU: NU,\n    PO: PO,\n    PR: PR,\n    SY: SY,\n    AI: AI,\n    AL: AL,\n    CJ: CJ,\n    EB: EB,\n    EM: EM,\n    H2: H2,\n    H3: H3,\n    HL: HL,\n    ID: ID,\n    JL: JL,\n    JV: JV,\n    JT: JT,\n    RI: RI,\n    SA: SA,\n    XX: XX\n};\n\nvar BREAK_MANDATORY = exports.BREAK_MANDATORY = '!';\nvar BREAK_NOT_ALLOWED = exports.BREAK_NOT_ALLOWED = '×';\nvar BREAK_ALLOWED = exports.BREAK_ALLOWED = '÷';\nvar UnicodeTrie = exports.UnicodeTrie = (0, _Trie.createTrieFromBase64)(_linebreakTrie2.default);\n\nvar ALPHABETICS = [AL, HL];\nvar HARD_LINE_BREAKS = [BK, CR, LF, NL];\nvar SPACE = [SP, ZW];\nvar PREFIX_POSTFIX = [PR, PO];\nvar LINE_BREAKS = HARD_LINE_BREAKS.concat(SPACE);\nvar KOREAN_SYLLABLE_BLOCK = [JL, JV, JT, H2, H3];\nvar HYPHEN = [HY, BA];\n\nvar codePointsToCharacterClasses = exports.codePointsToCharacterClasses = function codePointsToCharacterClasses(codePoints) {\n    var lineBreak = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'strict';\n\n    var types = [];\n    var indicies = [];\n    var categories = [];\n    codePoints.forEach(function (codePoint, index) {\n        var classType = UnicodeTrie.get(codePoint);\n        if (classType > LETTER_NUMBER_MODIFIER) {\n            categories.push(true);\n            classType -= LETTER_NUMBER_MODIFIER;\n        } else {\n            categories.push(false);\n        }\n\n        if (['normal', 'auto', 'loose'].indexOf(lineBreak) !== -1) {\n            // U+2010, – U+2013, 〜 U+301C, ゠ U+30A0\n            if ([0x2010, 0x2013, 0x301c, 0x30a0].indexOf(codePoint) !== -1) {\n                indicies.push(index);\n                return types.push(CB);\n            }\n        }\n\n        if (classType === CM || classType === ZWJ) {\n            // LB10 Treat any remaining combining mark or ZWJ as AL.\n            if (index === 0) {\n                indicies.push(index);\n                return types.push(AL);\n            }\n\n            // LB9 Do not break a combining character sequence; treat it as if it has the line breaking class of\n            // the base character in all of the following rules. Treat ZWJ as if it were CM.\n            var prev = types[index - 1];\n            if (LINE_BREAKS.indexOf(prev) === -1) {\n                indicies.push(indicies[index - 1]);\n                return types.push(prev);\n            }\n            indicies.push(index);\n            return types.push(AL);\n        }\n\n        indicies.push(index);\n\n        if (classType === CJ) {\n            return types.push(lineBreak === 'strict' ? NS : ID);\n        }\n\n        if (classType === SA) {\n            return types.push(AL);\n        }\n\n        if (classType === AI) {\n            return types.push(AL);\n        }\n\n        // For supplementary characters, a useful default is to treat characters in the range 10000..1FFFD as AL\n        // and characters in the ranges 20000..2FFFD and 30000..3FFFD as ID, until the implementation can be revised\n        // to take into account the actual line breaking properties for these characters.\n        if (classType === XX) {\n            if (codePoint >= 0x20000 && codePoint <= 0x2fffd || codePoint >= 0x30000 && codePoint <= 0x3fffd) {\n                return types.push(ID);\n            } else {\n                return types.push(AL);\n            }\n        }\n\n        types.push(classType);\n    });\n\n    return [indicies, types, categories];\n};\n\nvar isAdjacentWithSpaceIgnored = function isAdjacentWithSpaceIgnored(a, b, currentIndex, classTypes) {\n    var current = classTypes[currentIndex];\n    if (Array.isArray(a) ? a.indexOf(current) !== -1 : a === current) {\n        var i = currentIndex;\n        while (i <= classTypes.length) {\n            i++;\n            var next = classTypes[i];\n\n            if (next === b) {\n                return true;\n            }\n\n            if (next !== SP) {\n                break;\n            }\n        }\n    }\n\n    if (current === SP) {\n        var _i = currentIndex;\n\n        while (_i > 0) {\n            _i--;\n            var prev = classTypes[_i];\n\n            if (Array.isArray(a) ? a.indexOf(prev) !== -1 : a === prev) {\n                var n = currentIndex;\n                while (n <= classTypes.length) {\n                    n++;\n                    var _next = classTypes[n];\n\n                    if (_next === b) {\n                        return true;\n                    }\n\n                    if (_next !== SP) {\n                        break;\n                    }\n                }\n            }\n\n            if (prev !== SP) {\n                break;\n            }\n        }\n    }\n    return false;\n};\n\nvar previousNonSpaceClassType = function previousNonSpaceClassType(currentIndex, classTypes) {\n    var i = currentIndex;\n    while (i >= 0) {\n        var type = classTypes[i];\n        if (type === SP) {\n            i--;\n        } else {\n            return type;\n        }\n    }\n    return 0;\n};\n\nvar _lineBreakAtIndex = function _lineBreakAtIndex(codePoints, classTypes, indicies, index, forbiddenBreaks) {\n    if (indicies[index] === 0) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    var currentIndex = index - 1;\n    if (Array.isArray(forbiddenBreaks) && forbiddenBreaks[currentIndex] === true) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    var beforeIndex = currentIndex - 1;\n    var afterIndex = currentIndex + 1;\n    var current = classTypes[currentIndex];\n\n    // LB4 Always break after hard line breaks.\n    // LB5 Treat CR followed by LF, as well as CR, LF, and NL as hard line breaks.\n    var before = beforeIndex >= 0 ? classTypes[beforeIndex] : 0;\n    var next = classTypes[afterIndex];\n\n    if (current === CR && next === LF) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    if (HARD_LINE_BREAKS.indexOf(current) !== -1) {\n        return BREAK_MANDATORY;\n    }\n\n    // LB6 Do not break before hard line breaks.\n    if (HARD_LINE_BREAKS.indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB7 Do not break before spaces or zero width space.\n    if (SPACE.indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB8 Break before any character following a zero-width space, even if one or more spaces intervene.\n    if (previousNonSpaceClassType(currentIndex, classTypes) === ZW) {\n        return BREAK_ALLOWED;\n    }\n\n    // LB8a Do not break between a zero width joiner and an ideograph, emoji base or emoji modifier.\n    if (UnicodeTrie.get(codePoints[currentIndex]) === ZWJ && (next === ID || next === EB || next === EM)) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB11 Do not break before or after Word joiner and related characters.\n    if (current === WJ || next === WJ) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB12 Do not break after NBSP and related characters.\n    if (current === GL) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB12a Do not break before NBSP and related characters, except after spaces and hyphens.\n    if ([SP, BA, HY].indexOf(current) === -1 && next === GL) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB13 Do not break before ‘]’ or ‘!’ or ‘;’ or ‘/’, even after spaces.\n    if ([CL, CP, EX, IS, SY].indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB14 Do not break after ‘[’, even after spaces.\n    if (previousNonSpaceClassType(currentIndex, classTypes) === OP) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB15 Do not break within ‘”[’, even with intervening spaces.\n    if (isAdjacentWithSpaceIgnored(QU, OP, currentIndex, classTypes)) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB16 Do not break between closing punctuation and a nonstarter (lb=NS), even with intervening spaces.\n    if (isAdjacentWithSpaceIgnored([CL, CP], NS, currentIndex, classTypes)) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB17 Do not break within ‘——’, even with intervening spaces.\n    if (isAdjacentWithSpaceIgnored(B2, B2, currentIndex, classTypes)) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB18 Break after spaces.\n    if (current === SP) {\n        return BREAK_ALLOWED;\n    }\n\n    // LB19 Do not break before or after quotation marks, such as ‘ ” ’.\n    if (current === QU || next === QU) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB20 Break before and after unresolved CB.\n    if (next === CB || current === CB) {\n        return BREAK_ALLOWED;\n    }\n\n    // LB21 Do not break before hyphen-minus, other hyphens, fixed-width spaces, small kana, and other non-starters, or after acute accents.\n    if ([BA, HY, NS].indexOf(next) !== -1 || current === BB) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB21a Don't break after Hebrew + Hyphen.\n    if (before === HL && HYPHEN.indexOf(current) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB21b Don’t break between Solidus and Hebrew letters.\n    if (current === SY && next === HL) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB22 Do not break between two ellipses, or between letters, numbers or exclamations and ellipsis.\n    if (next === IN && ALPHABETICS.concat(IN, EX, NU, ID, EB, EM).indexOf(current) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB23 Do not break between digits and letters.\n    if (ALPHABETICS.indexOf(next) !== -1 && current === NU || ALPHABETICS.indexOf(current) !== -1 && next === NU) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB23a Do not break between numeric prefixes and ideographs, or between ideographs and numeric postfixes.\n    if (current === PR && [ID, EB, EM].indexOf(next) !== -1 || [ID, EB, EM].indexOf(current) !== -1 && next === PO) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB24 Do not break between numeric prefix/postfix and letters, or between letters and prefix/postfix.\n    if (ALPHABETICS.indexOf(current) !== -1 && PREFIX_POSTFIX.indexOf(next) !== -1 || PREFIX_POSTFIX.indexOf(current) !== -1 && ALPHABETICS.indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB25 Do not break between the following pairs of classes relevant to numbers:\n    if (\n    // (PR | PO) × ( OP | HY )? NU\n    [PR, PO].indexOf(current) !== -1 && (next === NU || [OP, HY].indexOf(next) !== -1 && classTypes[afterIndex + 1] === NU) ||\n    // ( OP | HY ) × NU\n    [OP, HY].indexOf(current) !== -1 && next === NU ||\n    // NU ×\t(NU | SY | IS)\n    current === NU && [NU, SY, IS].indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // NU (NU | SY | IS)* × (NU | SY | IS | CL | CP)\n    if ([NU, SY, IS, CL, CP].indexOf(next) !== -1) {\n        var prevIndex = currentIndex;\n        while (prevIndex >= 0) {\n            var type = classTypes[prevIndex];\n            if (type === NU) {\n                return BREAK_NOT_ALLOWED;\n            } else if ([SY, IS].indexOf(type) !== -1) {\n                prevIndex--;\n            } else {\n                break;\n            }\n        }\n    }\n\n    // NU (NU | SY | IS)* (CL | CP)? × (PO | PR))\n    if ([PR, PO].indexOf(next) !== -1) {\n        var _prevIndex = [CL, CP].indexOf(current) !== -1 ? beforeIndex : currentIndex;\n        while (_prevIndex >= 0) {\n            var _type = classTypes[_prevIndex];\n            if (_type === NU) {\n                return BREAK_NOT_ALLOWED;\n            } else if ([SY, IS].indexOf(_type) !== -1) {\n                _prevIndex--;\n            } else {\n                break;\n            }\n        }\n    }\n\n    // LB26 Do not break a Korean syllable.\n    if (JL === current && [JL, JV, H2, H3].indexOf(next) !== -1 || [JV, H2].indexOf(current) !== -1 && [JV, JT].indexOf(next) !== -1 || [JT, H3].indexOf(current) !== -1 && next === JT) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB27 Treat a Korean Syllable Block the same as ID.\n    if (KOREAN_SYLLABLE_BLOCK.indexOf(current) !== -1 && [IN, PO].indexOf(next) !== -1 || KOREAN_SYLLABLE_BLOCK.indexOf(next) !== -1 && current === PR) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB28 Do not break between alphabetics (“at”).\n    if (ALPHABETICS.indexOf(current) !== -1 && ALPHABETICS.indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB29 Do not break between numeric punctuation and alphabetics (“e.g.”).\n    if (current === IS && ALPHABETICS.indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB30 Do not break between letters, numbers, or ordinary symbols and opening or closing parentheses.\n    if (ALPHABETICS.concat(NU).indexOf(current) !== -1 && next === OP || ALPHABETICS.concat(NU).indexOf(next) !== -1 && current === CP) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB30a Break between two regional indicator symbols if and only if there are an even number of regional\n    // indicators preceding the position of the break.\n    if (current === RI && next === RI) {\n        var i = indicies[currentIndex];\n        var count = 1;\n        while (i > 0) {\n            i--;\n            if (classTypes[i] === RI) {\n                count++;\n            } else {\n                break;\n            }\n        }\n        if (count % 2 !== 0) {\n            return BREAK_NOT_ALLOWED;\n        }\n    }\n\n    // LB30b Do not break between an emoji base and an emoji modifier.\n    if (current === EB && next === EM) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    return BREAK_ALLOWED;\n};\n\nvar lineBreakAtIndex = exports.lineBreakAtIndex = function lineBreakAtIndex(codePoints, index) {\n    // LB2 Never break at the start of text.\n    if (index === 0) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB3 Always break at the end of text.\n    if (index >= codePoints.length) {\n        return BREAK_MANDATORY;\n    }\n\n    var _codePointsToCharacte = codePointsToCharacterClasses(codePoints),\n        _codePointsToCharacte2 = _slicedToArray(_codePointsToCharacte, 2),\n        indicies = _codePointsToCharacte2[0],\n        classTypes = _codePointsToCharacte2[1];\n\n    return _lineBreakAtIndex(codePoints, classTypes, indicies, index);\n};\n\nvar cssFormattedClasses = function cssFormattedClasses(codePoints, options) {\n    if (!options) {\n        options = { lineBreak: 'normal', wordBreak: 'normal' };\n    }\n\n    var _codePointsToCharacte3 = codePointsToCharacterClasses(codePoints, options.lineBreak),\n        _codePointsToCharacte4 = _slicedToArray(_codePointsToCharacte3, 3),\n        indicies = _codePointsToCharacte4[0],\n        classTypes = _codePointsToCharacte4[1],\n        isLetterNumber = _codePointsToCharacte4[2];\n\n    if (options.wordBreak === 'break-all' || options.wordBreak === 'break-word') {\n        classTypes = classTypes.map(function (type) {\n            return [NU, AL, SA].indexOf(type) !== -1 ? ID : type;\n        });\n    }\n\n    var forbiddenBreakpoints = options.wordBreak === 'keep-all' ? isLetterNumber.map(function (isLetterNumber, i) {\n        return isLetterNumber && codePoints[i] >= 0x4e00 && codePoints[i] <= 0x9fff;\n    }) : null;\n\n    return [indicies, classTypes, forbiddenBreakpoints];\n};\n\nvar inlineBreakOpportunities = exports.inlineBreakOpportunities = function inlineBreakOpportunities(str, options) {\n    var codePoints = (0, _Util.toCodePoints)(str);\n    var output = BREAK_NOT_ALLOWED;\n\n    var _cssFormattedClasses = cssFormattedClasses(codePoints, options),\n        _cssFormattedClasses2 = _slicedToArray(_cssFormattedClasses, 3),\n        indicies = _cssFormattedClasses2[0],\n        classTypes = _cssFormattedClasses2[1],\n        forbiddenBreakpoints = _cssFormattedClasses2[2];\n\n    codePoints.forEach(function (codePoint, i) {\n        output += (0, _Util.fromCodePoint)(codePoint) + (i >= codePoints.length - 1 ? BREAK_MANDATORY : _lineBreakAtIndex(codePoints, classTypes, indicies, i + 1, forbiddenBreakpoints));\n    });\n\n    return output;\n};\n\nvar Break = function () {\n    function Break(codePoints, lineBreak, start, end) {\n        _classCallCheck(this, Break);\n\n        this._codePoints = codePoints;\n        this.required = lineBreak === BREAK_MANDATORY;\n        this.start = start;\n        this.end = end;\n    }\n\n    _createClass(Break, [{\n        key: 'slice',\n        value: function slice() {\n            return _Util.fromCodePoint.apply(undefined, _toConsumableArray(this._codePoints.slice(this.start, this.end)));\n        }\n    }]);\n\n    return Break;\n}();\n\nvar LineBreaker = exports.LineBreaker = function LineBreaker(str, options) {\n    var codePoints = (0, _Util.toCodePoints)(str);\n\n    var _cssFormattedClasses3 = cssFormattedClasses(codePoints, options),\n        _cssFormattedClasses4 = _slicedToArray(_cssFormattedClasses3, 3),\n        indicies = _cssFormattedClasses4[0],\n        classTypes = _cssFormattedClasses4[1],\n        forbiddenBreakpoints = _cssFormattedClasses4[2];\n\n    var length = codePoints.length;\n    var lastEnd = 0;\n    var nextIndex = 0;\n\n    return {\n        next: function next() {\n            if (nextIndex >= length) {\n                return { done: true };\n            }\n            var lineBreak = BREAK_NOT_ALLOWED;\n            while (nextIndex < length && (lineBreak = _lineBreakAtIndex(codePoints, classTypes, indicies, ++nextIndex, forbiddenBreakpoints)) === BREAK_NOT_ALLOWED) {}\n\n            if (lineBreak !== BREAK_NOT_ALLOWED || nextIndex === length) {\n                var value = new Break(codePoints, lineBreak, lastEnd, nextIndex);\n                lastEnd = nextIndex;\n                return { value: value, done: false };\n            }\n\n            return { done: true };\n        }\n    };\n};","map":{"mappings":[{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"..\\node_modules\\css-line-break\\dist\\LineBreak.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}}],"sources":{"..\\node_modules\\css-line-break\\dist\\LineBreak.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LineBreaker = exports.inlineBreakOpportunities = exports.lineBreakAtIndex = exports.codePointsToCharacterClasses = exports.UnicodeTrie = exports.BREAK_ALLOWED = exports.BREAK_NOT_ALLOWED = exports.BREAK_MANDATORY = exports.classes = exports.LETTER_NUMBER_MODIFIER = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _Trie = require('./Trie');\n\nvar _linebreakTrie = require('./linebreak-trie');\n\nvar _linebreakTrie2 = _interopRequireDefault(_linebreakTrie);\n\nvar _Util = require('./Util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LETTER_NUMBER_MODIFIER = exports.LETTER_NUMBER_MODIFIER = 50;\n\n// Non-tailorable Line Breaking Classes\nvar BK = 1; //  Cause a line break (after)\nvar CR = 2; //  Cause a line break (after), except between CR and LF\nvar LF = 3; //  Cause a line break (after)\nvar CM = 4; //  Prohibit a line break between the character and the preceding character\nvar NL = 5; //  Cause a line break (after)\nvar SG = 6; //  Do not occur in well-formed text\nvar WJ = 7; //  Prohibit line breaks before and after\nvar ZW = 8; //  Provide a break opportunity\nvar GL = 9; //  Prohibit line breaks before and after\nvar SP = 10; // Enable indirect line breaks\nvar ZWJ = 11; // Prohibit line breaks within joiner sequences\n// Break Opportunities\nvar B2 = 12; //  Provide a line break opportunity before and after the character\nvar BA = 13; //  Generally provide a line break opportunity after the character\nvar BB = 14; //  Generally provide a line break opportunity before the character\nvar HY = 15; //  Provide a line break opportunity after the character, except in numeric context\nvar CB = 16; //   Provide a line break opportunity contingent on additional information\n// Characters Prohibiting Certain Breaks\nvar CL = 17; //  Prohibit line breaks before\nvar CP = 18; //  Prohibit line breaks before\nvar EX = 19; //  Prohibit line breaks before\nvar IN = 20; //  Allow only indirect line breaks between pairs\nvar NS = 21; //  Allow only indirect line breaks before\nvar OP = 22; //  Prohibit line breaks after\nvar QU = 23; //  Act like they are both opening and closing\n// Numeric Context\nvar IS = 24; //  Prevent breaks after any and before numeric\nvar NU = 25; //  Form numeric expressions for line breaking purposes\nvar PO = 26; //  Do not break following a numeric expression\nvar PR = 27; //  Do not break in front of a numeric expression\nvar SY = 28; //  Prevent a break before; and allow a break after\n// Other Characters\nvar AI = 29; //  Act like AL when the resolvedEAW is N; otherwise; act as ID\nvar AL = 30; //  Are alphabetic characters or symbols that are used with alphabetic characters\nvar CJ = 31; //  Treat as NS or ID for strict or normal breaking.\nvar EB = 32; //  Do not break from following Emoji Modifier\nvar EM = 33; //  Do not break from preceding Emoji Base\nvar H2 = 34; //  Form Korean syllable blocks\nvar H3 = 35; //  Form Korean syllable blocks\nvar HL = 36; //  Do not break around a following hyphen; otherwise act as Alphabetic\nvar ID = 37; //  Break before or after; except in some numeric context\nvar JL = 38; //  Form Korean syllable blocks\nvar JV = 39; //  Form Korean syllable blocks\nvar JT = 40; //  Form Korean syllable blocks\nvar RI = 41; //  Keep pairs together. For pairs; break before and after other classes\nvar SA = 42; //  Provide a line break opportunity contingent on additional, language-specific context analysis\nvar XX = 43; //  Have as yet unknown line breaking behavior or unassigned code positions\n\nvar classes = exports.classes = {\n    BK: BK,\n    CR: CR,\n    LF: LF,\n    CM: CM,\n    NL: NL,\n    SG: SG,\n    WJ: WJ,\n    ZW: ZW,\n    GL: GL,\n    SP: SP,\n    ZWJ: ZWJ,\n    B2: B2,\n    BA: BA,\n    BB: BB,\n    HY: HY,\n    CB: CB,\n    CL: CL,\n    CP: CP,\n    EX: EX,\n    IN: IN,\n    NS: NS,\n    OP: OP,\n    QU: QU,\n    IS: IS,\n    NU: NU,\n    PO: PO,\n    PR: PR,\n    SY: SY,\n    AI: AI,\n    AL: AL,\n    CJ: CJ,\n    EB: EB,\n    EM: EM,\n    H2: H2,\n    H3: H3,\n    HL: HL,\n    ID: ID,\n    JL: JL,\n    JV: JV,\n    JT: JT,\n    RI: RI,\n    SA: SA,\n    XX: XX\n};\n\nvar BREAK_MANDATORY = exports.BREAK_MANDATORY = '!';\nvar BREAK_NOT_ALLOWED = exports.BREAK_NOT_ALLOWED = '×';\nvar BREAK_ALLOWED = exports.BREAK_ALLOWED = '÷';\nvar UnicodeTrie = exports.UnicodeTrie = (0, _Trie.createTrieFromBase64)(_linebreakTrie2.default);\n\nvar ALPHABETICS = [AL, HL];\nvar HARD_LINE_BREAKS = [BK, CR, LF, NL];\nvar SPACE = [SP, ZW];\nvar PREFIX_POSTFIX = [PR, PO];\nvar LINE_BREAKS = HARD_LINE_BREAKS.concat(SPACE);\nvar KOREAN_SYLLABLE_BLOCK = [JL, JV, JT, H2, H3];\nvar HYPHEN = [HY, BA];\n\nvar codePointsToCharacterClasses = exports.codePointsToCharacterClasses = function codePointsToCharacterClasses(codePoints) {\n    var lineBreak = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'strict';\n\n    var types = [];\n    var indicies = [];\n    var categories = [];\n    codePoints.forEach(function (codePoint, index) {\n        var classType = UnicodeTrie.get(codePoint);\n        if (classType > LETTER_NUMBER_MODIFIER) {\n            categories.push(true);\n            classType -= LETTER_NUMBER_MODIFIER;\n        } else {\n            categories.push(false);\n        }\n\n        if (['normal', 'auto', 'loose'].indexOf(lineBreak) !== -1) {\n            // U+2010, – U+2013, 〜 U+301C, ゠ U+30A0\n            if ([0x2010, 0x2013, 0x301c, 0x30a0].indexOf(codePoint) !== -1) {\n                indicies.push(index);\n                return types.push(CB);\n            }\n        }\n\n        if (classType === CM || classType === ZWJ) {\n            // LB10 Treat any remaining combining mark or ZWJ as AL.\n            if (index === 0) {\n                indicies.push(index);\n                return types.push(AL);\n            }\n\n            // LB9 Do not break a combining character sequence; treat it as if it has the line breaking class of\n            // the base character in all of the following rules. Treat ZWJ as if it were CM.\n            var prev = types[index - 1];\n            if (LINE_BREAKS.indexOf(prev) === -1) {\n                indicies.push(indicies[index - 1]);\n                return types.push(prev);\n            }\n            indicies.push(index);\n            return types.push(AL);\n        }\n\n        indicies.push(index);\n\n        if (classType === CJ) {\n            return types.push(lineBreak === 'strict' ? NS : ID);\n        }\n\n        if (classType === SA) {\n            return types.push(AL);\n        }\n\n        if (classType === AI) {\n            return types.push(AL);\n        }\n\n        // For supplementary characters, a useful default is to treat characters in the range 10000..1FFFD as AL\n        // and characters in the ranges 20000..2FFFD and 30000..3FFFD as ID, until the implementation can be revised\n        // to take into account the actual line breaking properties for these characters.\n        if (classType === XX) {\n            if (codePoint >= 0x20000 && codePoint <= 0x2fffd || codePoint >= 0x30000 && codePoint <= 0x3fffd) {\n                return types.push(ID);\n            } else {\n                return types.push(AL);\n            }\n        }\n\n        types.push(classType);\n    });\n\n    return [indicies, types, categories];\n};\n\nvar isAdjacentWithSpaceIgnored = function isAdjacentWithSpaceIgnored(a, b, currentIndex, classTypes) {\n    var current = classTypes[currentIndex];\n    if (Array.isArray(a) ? a.indexOf(current) !== -1 : a === current) {\n        var i = currentIndex;\n        while (i <= classTypes.length) {\n            i++;\n            var next = classTypes[i];\n\n            if (next === b) {\n                return true;\n            }\n\n            if (next !== SP) {\n                break;\n            }\n        }\n    }\n\n    if (current === SP) {\n        var _i = currentIndex;\n\n        while (_i > 0) {\n            _i--;\n            var prev = classTypes[_i];\n\n            if (Array.isArray(a) ? a.indexOf(prev) !== -1 : a === prev) {\n                var n = currentIndex;\n                while (n <= classTypes.length) {\n                    n++;\n                    var _next = classTypes[n];\n\n                    if (_next === b) {\n                        return true;\n                    }\n\n                    if (_next !== SP) {\n                        break;\n                    }\n                }\n            }\n\n            if (prev !== SP) {\n                break;\n            }\n        }\n    }\n    return false;\n};\n\nvar previousNonSpaceClassType = function previousNonSpaceClassType(currentIndex, classTypes) {\n    var i = currentIndex;\n    while (i >= 0) {\n        var type = classTypes[i];\n        if (type === SP) {\n            i--;\n        } else {\n            return type;\n        }\n    }\n    return 0;\n};\n\nvar _lineBreakAtIndex = function _lineBreakAtIndex(codePoints, classTypes, indicies, index, forbiddenBreaks) {\n    if (indicies[index] === 0) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    var currentIndex = index - 1;\n    if (Array.isArray(forbiddenBreaks) && forbiddenBreaks[currentIndex] === true) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    var beforeIndex = currentIndex - 1;\n    var afterIndex = currentIndex + 1;\n    var current = classTypes[currentIndex];\n\n    // LB4 Always break after hard line breaks.\n    // LB5 Treat CR followed by LF, as well as CR, LF, and NL as hard line breaks.\n    var before = beforeIndex >= 0 ? classTypes[beforeIndex] : 0;\n    var next = classTypes[afterIndex];\n\n    if (current === CR && next === LF) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    if (HARD_LINE_BREAKS.indexOf(current) !== -1) {\n        return BREAK_MANDATORY;\n    }\n\n    // LB6 Do not break before hard line breaks.\n    if (HARD_LINE_BREAKS.indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB7 Do not break before spaces or zero width space.\n    if (SPACE.indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB8 Break before any character following a zero-width space, even if one or more spaces intervene.\n    if (previousNonSpaceClassType(currentIndex, classTypes) === ZW) {\n        return BREAK_ALLOWED;\n    }\n\n    // LB8a Do not break between a zero width joiner and an ideograph, emoji base or emoji modifier.\n    if (UnicodeTrie.get(codePoints[currentIndex]) === ZWJ && (next === ID || next === EB || next === EM)) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB11 Do not break before or after Word joiner and related characters.\n    if (current === WJ || next === WJ) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB12 Do not break after NBSP and related characters.\n    if (current === GL) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB12a Do not break before NBSP and related characters, except after spaces and hyphens.\n    if ([SP, BA, HY].indexOf(current) === -1 && next === GL) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB13 Do not break before ‘]’ or ‘!’ or ‘;’ or ‘/’, even after spaces.\n    if ([CL, CP, EX, IS, SY].indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB14 Do not break after ‘[’, even after spaces.\n    if (previousNonSpaceClassType(currentIndex, classTypes) === OP) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB15 Do not break within ‘”[’, even with intervening spaces.\n    if (isAdjacentWithSpaceIgnored(QU, OP, currentIndex, classTypes)) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB16 Do not break between closing punctuation and a nonstarter (lb=NS), even with intervening spaces.\n    if (isAdjacentWithSpaceIgnored([CL, CP], NS, currentIndex, classTypes)) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB17 Do not break within ‘——’, even with intervening spaces.\n    if (isAdjacentWithSpaceIgnored(B2, B2, currentIndex, classTypes)) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB18 Break after spaces.\n    if (current === SP) {\n        return BREAK_ALLOWED;\n    }\n\n    // LB19 Do not break before or after quotation marks, such as ‘ ” ’.\n    if (current === QU || next === QU) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB20 Break before and after unresolved CB.\n    if (next === CB || current === CB) {\n        return BREAK_ALLOWED;\n    }\n\n    // LB21 Do not break before hyphen-minus, other hyphens, fixed-width spaces, small kana, and other non-starters, or after acute accents.\n    if ([BA, HY, NS].indexOf(next) !== -1 || current === BB) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB21a Don't break after Hebrew + Hyphen.\n    if (before === HL && HYPHEN.indexOf(current) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB21b Don’t break between Solidus and Hebrew letters.\n    if (current === SY && next === HL) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB22 Do not break between two ellipses, or between letters, numbers or exclamations and ellipsis.\n    if (next === IN && ALPHABETICS.concat(IN, EX, NU, ID, EB, EM).indexOf(current) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB23 Do not break between digits and letters.\n    if (ALPHABETICS.indexOf(next) !== -1 && current === NU || ALPHABETICS.indexOf(current) !== -1 && next === NU) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB23a Do not break between numeric prefixes and ideographs, or between ideographs and numeric postfixes.\n    if (current === PR && [ID, EB, EM].indexOf(next) !== -1 || [ID, EB, EM].indexOf(current) !== -1 && next === PO) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB24 Do not break between numeric prefix/postfix and letters, or between letters and prefix/postfix.\n    if (ALPHABETICS.indexOf(current) !== -1 && PREFIX_POSTFIX.indexOf(next) !== -1 || PREFIX_POSTFIX.indexOf(current) !== -1 && ALPHABETICS.indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB25 Do not break between the following pairs of classes relevant to numbers:\n    if (\n    // (PR | PO) × ( OP | HY )? NU\n    [PR, PO].indexOf(current) !== -1 && (next === NU || [OP, HY].indexOf(next) !== -1 && classTypes[afterIndex + 1] === NU) ||\n    // ( OP | HY ) × NU\n    [OP, HY].indexOf(current) !== -1 && next === NU ||\n    // NU ×\t(NU | SY | IS)\n    current === NU && [NU, SY, IS].indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // NU (NU | SY | IS)* × (NU | SY | IS | CL | CP)\n    if ([NU, SY, IS, CL, CP].indexOf(next) !== -1) {\n        var prevIndex = currentIndex;\n        while (prevIndex >= 0) {\n            var type = classTypes[prevIndex];\n            if (type === NU) {\n                return BREAK_NOT_ALLOWED;\n            } else if ([SY, IS].indexOf(type) !== -1) {\n                prevIndex--;\n            } else {\n                break;\n            }\n        }\n    }\n\n    // NU (NU | SY | IS)* (CL | CP)? × (PO | PR))\n    if ([PR, PO].indexOf(next) !== -1) {\n        var _prevIndex = [CL, CP].indexOf(current) !== -1 ? beforeIndex : currentIndex;\n        while (_prevIndex >= 0) {\n            var _type = classTypes[_prevIndex];\n            if (_type === NU) {\n                return BREAK_NOT_ALLOWED;\n            } else if ([SY, IS].indexOf(_type) !== -1) {\n                _prevIndex--;\n            } else {\n                break;\n            }\n        }\n    }\n\n    // LB26 Do not break a Korean syllable.\n    if (JL === current && [JL, JV, H2, H3].indexOf(next) !== -1 || [JV, H2].indexOf(current) !== -1 && [JV, JT].indexOf(next) !== -1 || [JT, H3].indexOf(current) !== -1 && next === JT) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB27 Treat a Korean Syllable Block the same as ID.\n    if (KOREAN_SYLLABLE_BLOCK.indexOf(current) !== -1 && [IN, PO].indexOf(next) !== -1 || KOREAN_SYLLABLE_BLOCK.indexOf(next) !== -1 && current === PR) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB28 Do not break between alphabetics (“at”).\n    if (ALPHABETICS.indexOf(current) !== -1 && ALPHABETICS.indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB29 Do not break between numeric punctuation and alphabetics (“e.g.”).\n    if (current === IS && ALPHABETICS.indexOf(next) !== -1) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB30 Do not break between letters, numbers, or ordinary symbols and opening or closing parentheses.\n    if (ALPHABETICS.concat(NU).indexOf(current) !== -1 && next === OP || ALPHABETICS.concat(NU).indexOf(next) !== -1 && current === CP) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB30a Break between two regional indicator symbols if and only if there are an even number of regional\n    // indicators preceding the position of the break.\n    if (current === RI && next === RI) {\n        var i = indicies[currentIndex];\n        var count = 1;\n        while (i > 0) {\n            i--;\n            if (classTypes[i] === RI) {\n                count++;\n            } else {\n                break;\n            }\n        }\n        if (count % 2 !== 0) {\n            return BREAK_NOT_ALLOWED;\n        }\n    }\n\n    // LB30b Do not break between an emoji base and an emoji modifier.\n    if (current === EB && next === EM) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    return BREAK_ALLOWED;\n};\n\nvar lineBreakAtIndex = exports.lineBreakAtIndex = function lineBreakAtIndex(codePoints, index) {\n    // LB2 Never break at the start of text.\n    if (index === 0) {\n        return BREAK_NOT_ALLOWED;\n    }\n\n    // LB3 Always break at the end of text.\n    if (index >= codePoints.length) {\n        return BREAK_MANDATORY;\n    }\n\n    var _codePointsToCharacte = codePointsToCharacterClasses(codePoints),\n        _codePointsToCharacte2 = _slicedToArray(_codePointsToCharacte, 2),\n        indicies = _codePointsToCharacte2[0],\n        classTypes = _codePointsToCharacte2[1];\n\n    return _lineBreakAtIndex(codePoints, classTypes, indicies, index);\n};\n\nvar cssFormattedClasses = function cssFormattedClasses(codePoints, options) {\n    if (!options) {\n        options = { lineBreak: 'normal', wordBreak: 'normal' };\n    }\n\n    var _codePointsToCharacte3 = codePointsToCharacterClasses(codePoints, options.lineBreak),\n        _codePointsToCharacte4 = _slicedToArray(_codePointsToCharacte3, 3),\n        indicies = _codePointsToCharacte4[0],\n        classTypes = _codePointsToCharacte4[1],\n        isLetterNumber = _codePointsToCharacte4[2];\n\n    if (options.wordBreak === 'break-all' || options.wordBreak === 'break-word') {\n        classTypes = classTypes.map(function (type) {\n            return [NU, AL, SA].indexOf(type) !== -1 ? ID : type;\n        });\n    }\n\n    var forbiddenBreakpoints = options.wordBreak === 'keep-all' ? isLetterNumber.map(function (isLetterNumber, i) {\n        return isLetterNumber && codePoints[i] >= 0x4e00 && codePoints[i] <= 0x9fff;\n    }) : null;\n\n    return [indicies, classTypes, forbiddenBreakpoints];\n};\n\nvar inlineBreakOpportunities = exports.inlineBreakOpportunities = function inlineBreakOpportunities(str, options) {\n    var codePoints = (0, _Util.toCodePoints)(str);\n    var output = BREAK_NOT_ALLOWED;\n\n    var _cssFormattedClasses = cssFormattedClasses(codePoints, options),\n        _cssFormattedClasses2 = _slicedToArray(_cssFormattedClasses, 3),\n        indicies = _cssFormattedClasses2[0],\n        classTypes = _cssFormattedClasses2[1],\n        forbiddenBreakpoints = _cssFormattedClasses2[2];\n\n    codePoints.forEach(function (codePoint, i) {\n        output += (0, _Util.fromCodePoint)(codePoint) + (i >= codePoints.length - 1 ? BREAK_MANDATORY : _lineBreakAtIndex(codePoints, classTypes, indicies, i + 1, forbiddenBreakpoints));\n    });\n\n    return output;\n};\n\nvar Break = function () {\n    function Break(codePoints, lineBreak, start, end) {\n        _classCallCheck(this, Break);\n\n        this._codePoints = codePoints;\n        this.required = lineBreak === BREAK_MANDATORY;\n        this.start = start;\n        this.end = end;\n    }\n\n    _createClass(Break, [{\n        key: 'slice',\n        value: function slice() {\n            return _Util.fromCodePoint.apply(undefined, _toConsumableArray(this._codePoints.slice(this.start, this.end)));\n        }\n    }]);\n\n    return Break;\n}();\n\nvar LineBreaker = exports.LineBreaker = function LineBreaker(str, options) {\n    var codePoints = (0, _Util.toCodePoints)(str);\n\n    var _cssFormattedClasses3 = cssFormattedClasses(codePoints, options),\n        _cssFormattedClasses4 = _slicedToArray(_cssFormattedClasses3, 3),\n        indicies = _cssFormattedClasses4[0],\n        classTypes = _cssFormattedClasses4[1],\n        forbiddenBreakpoints = _cssFormattedClasses4[2];\n\n    var length = codePoints.length;\n    var lastEnd = 0;\n    var nextIndex = 0;\n\n    return {\n        next: function next() {\n            if (nextIndex >= length) {\n                return { done: true };\n            }\n            var lineBreak = BREAK_NOT_ALLOWED;\n            while (nextIndex < length && (lineBreak = _lineBreakAtIndex(codePoints, classTypes, indicies, ++nextIndex, forbiddenBreakpoints)) === BREAK_NOT_ALLOWED) {}\n\n            if (lineBreak !== BREAK_NOT_ALLOWED || nextIndex === length) {\n                var value = new Break(codePoints, lineBreak, lastEnd, nextIndex);\n                lastEnd = nextIndex;\n                return { value: value, done: false };\n            }\n\n            return { done: true };\n        }\n    };\n};"},"lineCount":609}},"hash":"9e2091c998dcaa4f9d33dcee343226da","cacheData":{"env":{}}}