{"id":"..\\node_modules\\uuid\\lib\\rng.js","dependencies":[{"name":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\uuid\\package.json","includedInParent":true,"mtime":1535682552500},{"name":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\demo\\package.json","includedInParent":true,"mtime":1537422496909},{"name":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\demo\\.babelrc","includedInParent":true,"mtime":1537328857517},{"name":"crypto","loc":{"line":4,"column":21},"parent":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\uuid\\lib\\rng.js","resolved":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\demo\\node_modules\\crypto-browserify\\index.js"}],"generated":{"js":"// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","map":{"mappings":[{"source":"..\\node_modules\\uuid\\lib\\rng.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\uuid\\lib\\rng.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\uuid\\lib\\rng.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\uuid\\lib\\rng.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\uuid\\lib\\rng.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\uuid\\lib\\rng.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\uuid\\lib\\rng.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\uuid\\lib\\rng.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\uuid\\lib\\rng.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}}],"sources":{"..\\node_modules\\uuid\\lib\\rng.js":"// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n"},"lineCount":9}},"hash":"d4238dd4b9ae5b38eb2247f02367fe03","cacheData":{"env":{}}}