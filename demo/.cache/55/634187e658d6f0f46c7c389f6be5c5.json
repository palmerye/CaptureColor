{"id":"../node_modules/css-line-break/dist/Trie.js","dependencies":[{"name":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\demo\\package.json","includedInParent":true,"mtime":1540261815978},{"name":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\demo\\.babelrc","includedInParent":true,"mtime":1540259238672},{"name":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\css-line-break\\package.json","includedInParent":true,"mtime":1535616500645},{"name":"./Util","loc":{"line":10,"column":20},"parent":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\css-line-break\\dist\\Trie.js","resolved":"E:\\palmer\\inWebpack\\DIY-loader-plugin\\CaptureColor\\node_modules\\css-line-break\\dist\\Util.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Trie = exports.createTrieFromBase64 = exports.UTRIE2_INDEX_2_MASK = exports.UTRIE2_INDEX_2_BLOCK_LENGTH = exports.UTRIE2_OMITTED_BMP_INDEX_1_LENGTH = exports.UTRIE2_INDEX_1_OFFSET = exports.UTRIE2_UTF8_2B_INDEX_2_LENGTH = exports.UTRIE2_UTF8_2B_INDEX_2_OFFSET = exports.UTRIE2_INDEX_2_BMP_LENGTH = exports.UTRIE2_LSCP_INDEX_2_LENGTH = exports.UTRIE2_DATA_MASK = exports.UTRIE2_DATA_BLOCK_LENGTH = exports.UTRIE2_LSCP_INDEX_2_OFFSET = exports.UTRIE2_SHIFT_1_2 = exports.UTRIE2_INDEX_SHIFT = exports.UTRIE2_SHIFT_1 = exports.UTRIE2_SHIFT_2 = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Util = require('./Util');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** Shift size for getting the index-2 table offset. */\nvar UTRIE2_SHIFT_2 = exports.UTRIE2_SHIFT_2 = 5;\n\n/** Shift size for getting the index-1 table offset. */\nvar UTRIE2_SHIFT_1 = exports.UTRIE2_SHIFT_1 = 6 + 5;\n\n/**\n * Shift size for shifting left the index array values.\n * Increases possible data size with 16-bit index values at the cost\n * of compactability.\n * This requires data blocks to be aligned by UTRIE2_DATA_GRANULARITY.\n */\nvar UTRIE2_INDEX_SHIFT = exports.UTRIE2_INDEX_SHIFT = 2;\n\n/**\n * Difference between the two shift sizes,\n * for getting an index-1 offset from an index-2 offset. 6=11-5\n */\nvar UTRIE2_SHIFT_1_2 = exports.UTRIE2_SHIFT_1_2 = UTRIE2_SHIFT_1 - UTRIE2_SHIFT_2;\n\n/**\n * The part of the index-2 table for U+D800..U+DBFF stores values for\n * lead surrogate code _units_ not code _points_.\n * Values for lead surrogate code _points_ are indexed with this portion of the table.\n * Length=32=0x20=0x400>>UTRIE2_SHIFT_2. (There are 1024=0x400 lead surrogates.)\n */\nvar UTRIE2_LSCP_INDEX_2_OFFSET = exports.UTRIE2_LSCP_INDEX_2_OFFSET = 0x10000 >> UTRIE2_SHIFT_2;\n\n/** Number of entries in a data block. 32=0x20 */\nvar UTRIE2_DATA_BLOCK_LENGTH = exports.UTRIE2_DATA_BLOCK_LENGTH = 1 << UTRIE2_SHIFT_2;\n/** Mask for getting the lower bits for the in-data-block offset. */\nvar UTRIE2_DATA_MASK = exports.UTRIE2_DATA_MASK = UTRIE2_DATA_BLOCK_LENGTH - 1;\n\nvar UTRIE2_LSCP_INDEX_2_LENGTH = exports.UTRIE2_LSCP_INDEX_2_LENGTH = 0x400 >> UTRIE2_SHIFT_2;\n/** Count the lengths of both BMP pieces. 2080=0x820 */\nvar UTRIE2_INDEX_2_BMP_LENGTH = exports.UTRIE2_INDEX_2_BMP_LENGTH = UTRIE2_LSCP_INDEX_2_OFFSET + UTRIE2_LSCP_INDEX_2_LENGTH;\n/**\n * The 2-byte UTF-8 version of the index-2 table follows at offset 2080=0x820.\n * Length 32=0x20 for lead bytes C0..DF, regardless of UTRIE2_SHIFT_2.\n */\nvar UTRIE2_UTF8_2B_INDEX_2_OFFSET = exports.UTRIE2_UTF8_2B_INDEX_2_OFFSET = UTRIE2_INDEX_2_BMP_LENGTH;\nvar UTRIE2_UTF8_2B_INDEX_2_LENGTH = exports.UTRIE2_UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6; /* U+0800 is the first code point after 2-byte UTF-8 */\n/**\n * The index-1 table, only used for supplementary code points, at offset 2112=0x840.\n * Variable length, for code points up to highStart, where the last single-value range starts.\n * Maximum length 512=0x200=0x100000>>UTRIE2_SHIFT_1.\n * (For 0x100000 supplementary code points U+10000..U+10ffff.)\n *\n * The part of the index-2 table for supplementary code points starts\n * after this index-1 table.\n *\n * Both the index-1 table and the following part of the index-2 table\n * are omitted completely if there is only BMP data.\n */\nvar UTRIE2_INDEX_1_OFFSET = exports.UTRIE2_INDEX_1_OFFSET = UTRIE2_UTF8_2B_INDEX_2_OFFSET + UTRIE2_UTF8_2B_INDEX_2_LENGTH;\n\n/**\n * Number of index-1 entries for the BMP. 32=0x20\n * This part of the index-1 table is omitted from the serialized form.\n */\nvar UTRIE2_OMITTED_BMP_INDEX_1_LENGTH = exports.UTRIE2_OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> UTRIE2_SHIFT_1;\n\n/** Number of entries in an index-2 block. 64=0x40 */\nvar UTRIE2_INDEX_2_BLOCK_LENGTH = exports.UTRIE2_INDEX_2_BLOCK_LENGTH = 1 << UTRIE2_SHIFT_1_2;\n/** Mask for getting the lower bits for the in-index-2-block offset. */\nvar UTRIE2_INDEX_2_MASK = exports.UTRIE2_INDEX_2_MASK = UTRIE2_INDEX_2_BLOCK_LENGTH - 1;\n\nvar createTrieFromBase64 = exports.createTrieFromBase64 = function createTrieFromBase64(base64) {\n    var buffer = (0, _Util.decode)(base64);\n    var view32 = Array.isArray(buffer) ? (0, _Util.polyUint32Array)(buffer) : new Uint32Array(buffer);\n    var view16 = Array.isArray(buffer) ? (0, _Util.polyUint16Array)(buffer) : new Uint16Array(buffer);\n    var headerLength = 24;\n\n    var index = view16.slice(headerLength / 2, view32[4] / 2);\n    var data = view32[5] === 2 ? view16.slice((headerLength + view32[4]) / 2) : view32.slice(Math.ceil((headerLength + view32[4]) / 4));\n\n    return new Trie(view32[0], view32[1], view32[2], view32[3], index, data);\n};\n\nvar Trie = exports.Trie = function () {\n    function Trie(initialValue, errorValue, highStart, highValueIndex, index, data) {\n        _classCallCheck(this, Trie);\n\n        this.initialValue = initialValue;\n        this.errorValue = errorValue;\n        this.highStart = highStart;\n        this.highValueIndex = highValueIndex;\n        this.index = index;\n        this.data = data;\n    }\n\n    /**\n     * Get the value for a code point as stored in the Trie.\n     *\n     * @param codePoint the code point\n     * @return the value\n     */\n\n\n    _createClass(Trie, [{\n        key: 'get',\n        value: function get(codePoint) {\n            var ix = void 0;\n            if (codePoint >= 0) {\n                if (codePoint < 0x0d800 || codePoint > 0x0dbff && codePoint <= 0x0ffff) {\n                    // Ordinary BMP code point, excluding leading surrogates.\n                    // BMP uses a single level lookup.  BMP index starts at offset 0 in the Trie2 index.\n                    // 16 bit data is stored in the index array itself.\n                    ix = this.index[codePoint >> UTRIE2_SHIFT_2];\n                    ix = (ix << UTRIE2_INDEX_SHIFT) + (codePoint & UTRIE2_DATA_MASK);\n                    return this.data[ix];\n                }\n\n                if (codePoint <= 0xffff) {\n                    // Lead Surrogate Code Point.  A Separate index section is stored for\n                    // lead surrogate code units and code points.\n                    //   The main index has the code unit data.\n                    //   For this function, we need the code point data.\n                    // Note: this expression could be refactored for slightly improved efficiency, but\n                    //       surrogate code points will be so rare in practice that it's not worth it.\n                    ix = this.index[UTRIE2_LSCP_INDEX_2_OFFSET + (codePoint - 0xd800 >> UTRIE2_SHIFT_2)];\n                    ix = (ix << UTRIE2_INDEX_SHIFT) + (codePoint & UTRIE2_DATA_MASK);\n                    return this.data[ix];\n                }\n\n                if (codePoint < this.highStart) {\n                    // Supplemental code point, use two-level lookup.\n                    ix = UTRIE2_INDEX_1_OFFSET - UTRIE2_OMITTED_BMP_INDEX_1_LENGTH + (codePoint >> UTRIE2_SHIFT_1);\n                    ix = this.index[ix];\n                    ix += codePoint >> UTRIE2_SHIFT_2 & UTRIE2_INDEX_2_MASK;\n                    ix = this.index[ix];\n                    ix = (ix << UTRIE2_INDEX_SHIFT) + (codePoint & UTRIE2_DATA_MASK);\n                    return this.data[ix];\n                }\n                if (codePoint <= 0x10ffff) {\n                    return this.data[this.highValueIndex];\n                }\n            }\n\n            // Fall through.  The code point is outside of the legal range of 0..0x10ffff.\n            return this.errorValue;\n        }\n    }]);\n\n    return Trie;\n}();","map":{"mappings":[{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/css-line-break/dist/Trie.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}}],"sources":{"../node_modules/css-line-break/dist/Trie.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Trie = exports.createTrieFromBase64 = exports.UTRIE2_INDEX_2_MASK = exports.UTRIE2_INDEX_2_BLOCK_LENGTH = exports.UTRIE2_OMITTED_BMP_INDEX_1_LENGTH = exports.UTRIE2_INDEX_1_OFFSET = exports.UTRIE2_UTF8_2B_INDEX_2_LENGTH = exports.UTRIE2_UTF8_2B_INDEX_2_OFFSET = exports.UTRIE2_INDEX_2_BMP_LENGTH = exports.UTRIE2_LSCP_INDEX_2_LENGTH = exports.UTRIE2_DATA_MASK = exports.UTRIE2_DATA_BLOCK_LENGTH = exports.UTRIE2_LSCP_INDEX_2_OFFSET = exports.UTRIE2_SHIFT_1_2 = exports.UTRIE2_INDEX_SHIFT = exports.UTRIE2_SHIFT_1 = exports.UTRIE2_SHIFT_2 = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Util = require('./Util');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** Shift size for getting the index-2 table offset. */\nvar UTRIE2_SHIFT_2 = exports.UTRIE2_SHIFT_2 = 5;\n\n/** Shift size for getting the index-1 table offset. */\nvar UTRIE2_SHIFT_1 = exports.UTRIE2_SHIFT_1 = 6 + 5;\n\n/**\n * Shift size for shifting left the index array values.\n * Increases possible data size with 16-bit index values at the cost\n * of compactability.\n * This requires data blocks to be aligned by UTRIE2_DATA_GRANULARITY.\n */\nvar UTRIE2_INDEX_SHIFT = exports.UTRIE2_INDEX_SHIFT = 2;\n\n/**\n * Difference between the two shift sizes,\n * for getting an index-1 offset from an index-2 offset. 6=11-5\n */\nvar UTRIE2_SHIFT_1_2 = exports.UTRIE2_SHIFT_1_2 = UTRIE2_SHIFT_1 - UTRIE2_SHIFT_2;\n\n/**\n * The part of the index-2 table for U+D800..U+DBFF stores values for\n * lead surrogate code _units_ not code _points_.\n * Values for lead surrogate code _points_ are indexed with this portion of the table.\n * Length=32=0x20=0x400>>UTRIE2_SHIFT_2. (There are 1024=0x400 lead surrogates.)\n */\nvar UTRIE2_LSCP_INDEX_2_OFFSET = exports.UTRIE2_LSCP_INDEX_2_OFFSET = 0x10000 >> UTRIE2_SHIFT_2;\n\n/** Number of entries in a data block. 32=0x20 */\nvar UTRIE2_DATA_BLOCK_LENGTH = exports.UTRIE2_DATA_BLOCK_LENGTH = 1 << UTRIE2_SHIFT_2;\n/** Mask for getting the lower bits for the in-data-block offset. */\nvar UTRIE2_DATA_MASK = exports.UTRIE2_DATA_MASK = UTRIE2_DATA_BLOCK_LENGTH - 1;\n\nvar UTRIE2_LSCP_INDEX_2_LENGTH = exports.UTRIE2_LSCP_INDEX_2_LENGTH = 0x400 >> UTRIE2_SHIFT_2;\n/** Count the lengths of both BMP pieces. 2080=0x820 */\nvar UTRIE2_INDEX_2_BMP_LENGTH = exports.UTRIE2_INDEX_2_BMP_LENGTH = UTRIE2_LSCP_INDEX_2_OFFSET + UTRIE2_LSCP_INDEX_2_LENGTH;\n/**\n * The 2-byte UTF-8 version of the index-2 table follows at offset 2080=0x820.\n * Length 32=0x20 for lead bytes C0..DF, regardless of UTRIE2_SHIFT_2.\n */\nvar UTRIE2_UTF8_2B_INDEX_2_OFFSET = exports.UTRIE2_UTF8_2B_INDEX_2_OFFSET = UTRIE2_INDEX_2_BMP_LENGTH;\nvar UTRIE2_UTF8_2B_INDEX_2_LENGTH = exports.UTRIE2_UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6; /* U+0800 is the first code point after 2-byte UTF-8 */\n/**\n * The index-1 table, only used for supplementary code points, at offset 2112=0x840.\n * Variable length, for code points up to highStart, where the last single-value range starts.\n * Maximum length 512=0x200=0x100000>>UTRIE2_SHIFT_1.\n * (For 0x100000 supplementary code points U+10000..U+10ffff.)\n *\n * The part of the index-2 table for supplementary code points starts\n * after this index-1 table.\n *\n * Both the index-1 table and the following part of the index-2 table\n * are omitted completely if there is only BMP data.\n */\nvar UTRIE2_INDEX_1_OFFSET = exports.UTRIE2_INDEX_1_OFFSET = UTRIE2_UTF8_2B_INDEX_2_OFFSET + UTRIE2_UTF8_2B_INDEX_2_LENGTH;\n\n/**\n * Number of index-1 entries for the BMP. 32=0x20\n * This part of the index-1 table is omitted from the serialized form.\n */\nvar UTRIE2_OMITTED_BMP_INDEX_1_LENGTH = exports.UTRIE2_OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> UTRIE2_SHIFT_1;\n\n/** Number of entries in an index-2 block. 64=0x40 */\nvar UTRIE2_INDEX_2_BLOCK_LENGTH = exports.UTRIE2_INDEX_2_BLOCK_LENGTH = 1 << UTRIE2_SHIFT_1_2;\n/** Mask for getting the lower bits for the in-index-2-block offset. */\nvar UTRIE2_INDEX_2_MASK = exports.UTRIE2_INDEX_2_MASK = UTRIE2_INDEX_2_BLOCK_LENGTH - 1;\n\nvar createTrieFromBase64 = exports.createTrieFromBase64 = function createTrieFromBase64(base64) {\n    var buffer = (0, _Util.decode)(base64);\n    var view32 = Array.isArray(buffer) ? (0, _Util.polyUint32Array)(buffer) : new Uint32Array(buffer);\n    var view16 = Array.isArray(buffer) ? (0, _Util.polyUint16Array)(buffer) : new Uint16Array(buffer);\n    var headerLength = 24;\n\n    var index = view16.slice(headerLength / 2, view32[4] / 2);\n    var data = view32[5] === 2 ? view16.slice((headerLength + view32[4]) / 2) : view32.slice(Math.ceil((headerLength + view32[4]) / 4));\n\n    return new Trie(view32[0], view32[1], view32[2], view32[3], index, data);\n};\n\nvar Trie = exports.Trie = function () {\n    function Trie(initialValue, errorValue, highStart, highValueIndex, index, data) {\n        _classCallCheck(this, Trie);\n\n        this.initialValue = initialValue;\n        this.errorValue = errorValue;\n        this.highStart = highStart;\n        this.highValueIndex = highValueIndex;\n        this.index = index;\n        this.data = data;\n    }\n\n    /**\n     * Get the value for a code point as stored in the Trie.\n     *\n     * @param codePoint the code point\n     * @return the value\n     */\n\n\n    _createClass(Trie, [{\n        key: 'get',\n        value: function get(codePoint) {\n            var ix = void 0;\n            if (codePoint >= 0) {\n                if (codePoint < 0x0d800 || codePoint > 0x0dbff && codePoint <= 0x0ffff) {\n                    // Ordinary BMP code point, excluding leading surrogates.\n                    // BMP uses a single level lookup.  BMP index starts at offset 0 in the Trie2 index.\n                    // 16 bit data is stored in the index array itself.\n                    ix = this.index[codePoint >> UTRIE2_SHIFT_2];\n                    ix = (ix << UTRIE2_INDEX_SHIFT) + (codePoint & UTRIE2_DATA_MASK);\n                    return this.data[ix];\n                }\n\n                if (codePoint <= 0xffff) {\n                    // Lead Surrogate Code Point.  A Separate index section is stored for\n                    // lead surrogate code units and code points.\n                    //   The main index has the code unit data.\n                    //   For this function, we need the code point data.\n                    // Note: this expression could be refactored for slightly improved efficiency, but\n                    //       surrogate code points will be so rare in practice that it's not worth it.\n                    ix = this.index[UTRIE2_LSCP_INDEX_2_OFFSET + (codePoint - 0xd800 >> UTRIE2_SHIFT_2)];\n                    ix = (ix << UTRIE2_INDEX_SHIFT) + (codePoint & UTRIE2_DATA_MASK);\n                    return this.data[ix];\n                }\n\n                if (codePoint < this.highStart) {\n                    // Supplemental code point, use two-level lookup.\n                    ix = UTRIE2_INDEX_1_OFFSET - UTRIE2_OMITTED_BMP_INDEX_1_LENGTH + (codePoint >> UTRIE2_SHIFT_1);\n                    ix = this.index[ix];\n                    ix += codePoint >> UTRIE2_SHIFT_2 & UTRIE2_INDEX_2_MASK;\n                    ix = this.index[ix];\n                    ix = (ix << UTRIE2_INDEX_SHIFT) + (codePoint & UTRIE2_DATA_MASK);\n                    return this.data[ix];\n                }\n                if (codePoint <= 0x10ffff) {\n                    return this.data[this.highValueIndex];\n                }\n            }\n\n            // Fall through.  The code point is outside of the legal range of 0..0x10ffff.\n            return this.errorValue;\n        }\n    }]);\n\n    return Trie;\n}();"},"lineCount":159}},"hash":"f3716683fbecb315c11bb5e7e8c0c824","cacheData":{"env":{}}}